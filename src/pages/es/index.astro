---
import NavigationSlider from "@/components/NavigationSlider.astro"
import Typography from "@/components/Typography.astro"
import Layout from "@/layouts/Layout.astro"
import Setup from "@public/images/assets/desktop-pc-setup.webp"
import { Icon } from "astro-icon/components"
---

<Layout title="Inicio">
	<div class="over flex flex-col gap-20 px-5 font-source-sans-pro lg:max-h-dvh lg:overflow-hidden">
		<section
			id="hero"
			class="navigationSection grid grid-rows-[min-content_auto] gap-8 pb-12 pt-20 md:min-h-screen md:grid-cols-2 md:grid-rows-1 md:items-center lg:pr-28 xl:mx-auto xl:max-w-7xl xl:pr-24 2xl:pr-0"
		>
			<div class="order-2 md:order-1">
				<Typography
					as="h1"
					id={"hero-title"}
					variant="h1"
					color="white"
					fontWeight="bolder"
					class:list={"mb-9 md:max-w-[1000px]"}
				>
					Ingeniero de Software
				</Typography>
				<Typography
					as="p"
					id={"hero-description"}
					variant="body"
					color="white"
					fontWeight="normal"
					class:list={"mb-4 max-w-[600px]"}
				>
					Convirtiendo ideas en realidad. Diseño interfaces de usuario hermosas y creo potentes
					backends para aplicaciones web, de escritorio y móviles.
				</Typography>
				<a
					href="#about-me"
					class="flex w-fit rotate-0 items-center gap-1 text-neutral-content underline decoration-accent decoration-2 underline-offset-[5px] transition duration-300 ease-in-out hover:text-accent [&>svg]:rotate-0 [&>svg]:transition [&>svg]:duration-300 [&>svg]:hover:rotate-90"
				>
					<Typography as="span" variant="body" color="inherit" fontWeight="bold"
						>Sobre mí</Typography
					>
					<Icon name="mdi:chevron-right" class="mt-[6px] h-6 w-6" />
				</a>
			</div>
			<div class="order-1 mx-auto mb-8 mt-8 w-full md:order-2">
				<figure class="w-full">
					<img
						src={Setup.src}
						alt="logo del héroe"
						width={Setup.width}
						height={Setup.height}
						class="w-full max-w-full"
					/>
				</figure>
			</div>
		</section>

		<section
			id="about-me"
			class="navigationSection grid gap-8 py-28 md:min-h-screen md:grid-cols-2 md:grid-rows-1 md:items-center lg:pr-28 xl:mx-auto xl:max-w-7xl xl:pr-24 2xl:pr-0"
		>
			<div class="mb-9 mt-5 flex flex-col gap-4">
				<Typography
					as="h2"
					id={"about-me-title"}
					variant="h2"
					color="white"
					fontWeight="bolder"
					class:list={"md:max-w-[1000px]"}
				>
					<span>Hola,</span>
					<br />
					<span>Soy Cristhofer Pincetti</span>
				</Typography>
				<Typography
					as="p"
					id={"about-me-placeholder"}
					variant="body"
					color="white"
					fontWeight="light"
					class:list={"opacity-70"}
				>
					Ingeniero de Software / Entusiasta de la tecnología / Disfruto resolviendo problemas
				</Typography>
			</div>
			<div class="flex flex-col gap-4" id="about-me-description">
				<Typography as="p" variant="body" color="white" fontWeight="normal">
					Más de dos años de experiencia creando experiencias de usuario fluidas.
				</Typography>
				<Typography as="p" variant="body" color="white" fontWeight="normal">
					Hábil en soluciones tecnológicas innovadoras y codificación creativa.
				</Typography>
				<Typography as="p" variant="body" color="white" fontWeight="normal" class:list={""}>
					Especializado en construir soluciones de extremo a extremo y disfruto abordar desafíos
					complejos.
				</Typography>
			</div>
		</section>

		<!-- <Slider id={"experience"} slides={slides} currentSlide={1} /> -->

		<section
			id="skills"
			class="navigationSection py-12 md:flex md:min-h-screen md:flex-col md:items-center md:justify-center xl:mx-auto xl:max-w-7xl"
		>
			<Typography as="p" variant="body" color="white" fontWeight="light" class:list={"opacity-70"}>
				¡Superpoderes para superhéroes del software!
			</Typography>
			<Typography
				as="h2"
				id={"skills-title"}
				variant="h2"
				color="white"
				fontWeight="bolder"
				class:list={"md:max-w-[1000px]"}
			>
				Habilidades y Tecnologías
			</Typography>
			<div class="flex flex-col gap-12 md:max-w-4xl md:items-center">
				<div class="flex flex-col gap-4 text-lg md:text-center">
					<Typography
						as="p"
						id="skills-description"
						variant="body"
						color="white"
						fontWeight="normal"
					>
						Como Ingeniero de Software, poseo competencia en una amplia gama de tecnologías, con un
						enfoque principal en el desarrollo web. Tengo experiencia aprovechando JavaScript, HTML
						y CSS para construir sitios web fáciles de usar. Además, para aplicaciones web
						interactivas, estoy bien versado en frameworks frontend como Next.js, Angular y React.
						Mis habilidades de desarrollo backend abarcan Node.js, tanto de forma independiente como
						en conjunto con el framework Express.js. Además, tengo experiencia creando aplicaciones
						multiplataforma utilizando Electron.js, React Native y Android Studio, dirigidas a
						entornos de escritorio (Windows, Linux, macOS) y móviles (iOS, Android).
					</Typography>
					<Typography as="p" id="skills-linkedin" variant="body" color="white" fontWeight="normal">
						Visita mi
						<a
							href="https://www.linkedin.com/in/cristhofer-pincetti-herrera/"
							class="text-neutral-content underline decoration-accent decoration-2 underline-offset-[5px] transition-colors duration-300 ease-in-out hover:text-accent"
						>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Linkedin</Typography
							>
						</a> para más detalles.
					</Typography>
				</div>
				<div
					id="skills-list"
					class="grid w-full max-w-[50rem] grid-cols-3 gap-5 md:flex md:flex-wrap md:items-center md:justify-center"
				>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:nextdotjs" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Next JS</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:angular" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Angular</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:astro" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Astro</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:electron" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Electron</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:react" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>React</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:react" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>React Native</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="teenyicons:nodejs-solid" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Node JS</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:tailwindcss" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Tailwind CSS</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="teenyicons:typescript-solid" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>TypeScript</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="teenyicons:javascript-solid" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>JavaScript</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:html5" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>HTML:5</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:css3" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>CSS3</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="cib:postgresql" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>PostgreSQL</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="grommet-icons:mysql" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>MySQL</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:mongodb" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>MongoDB</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:prisma" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Prisma</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:sequelize" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Sequelize</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:github" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Github</Typography
							>
						</figcaption>
					</figure>
					<figure
						class="skill flex flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent"
					>
						<Icon name="simple-icons:gitlab" class="h-12 w-12" />
						<figcaption>
							<Typography as="span" variant="body" color="inherit" fontWeight="normal"
								>Gitlab</Typography
							>
						</figcaption>
					</figure>
				</div>
			</div>
		</section>
	</div>
	<div class="invisible fixed right-12 top-1/2 lg:visible">
		<NavigationSlider />
	</div>
	<figure
		class="skill fixed bottom-16 left-12 hidden flex-col items-center justify-start text-center text-neutral-content transition-colors duration-300 ease-in-out hover:text-accent xl:flex"
	>
		<a href="https://github.com/BrainerVirus/" target="_blank">
			<Icon name="fa6-brands:github-alt" class="h-10 w-10" />
		</a>
	</figure>
</Layout>

<script>
	import { $$ } from "@/utils/dom-selector"

	const sections = $$(".navigationSection")
	const skills = $$("#skills-list > .skill")
	let previousSection: IntersectionObserverEntry | null = null
	let curretSection: IntersectionObserverEntry | null = null

	const classesSectionFirstRender = ["animate-fade-in", "animate-delay-200", "animate-duration-700"]

	const classesSectionDownIn = [
		"animate-fade-in-down",
		"animate-delay-400",
		"animate-duration-1000",
	]

	const classesSectionDownOut = ["animate-fade-out-down", "animate-duration-1000"]

	const classesSectionUpIn = ["animate-fade-in-up", "animate-delay-400", "animate-duration-1000"]

	const classesSectionUpOut = ["animate-fade-out-up", "animate-duration-1000"]

	const skillsClasses = ["animate-fade-in", "animate-duration-1000"]

	let firstSectionRender = true

	const sectionsObserver = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			const target = entry.target as HTMLElement

			if (entry.isIntersecting) {
				previousSection = curretSection
				curretSection = entry

				// Apply initial animation classes
				if (firstSectionRender) {
					target.classList.add(...classesSectionFirstRender)

					// Wait for the initial animation to complete
					target.addEventListener(
						"animationend",
						() => {
							target.classList.remove(...classesSectionFirstRender)
						},
						{ once: true }
					)
					firstSectionRender = false
				} else {
					// Section is entering the viewport
					// Handle subsequent scrolls
					const direction = checkIntersectionDirection(entry)

					target.classList.remove(...classesSectionDownIn)
					target.classList.remove(...classesSectionUpIn)

					if (direction === "down") {
						target.classList.add(...classesSectionDownIn)

						previousSection?.target.classList.add(...classesSectionUpOut)
						target.addEventListener(
							"animationend",
							() => {
								previousSection?.target.classList.remove(...classesSectionUpOut)
							},
							{ once: true }
						)
					} else {
						target.classList.add(...classesSectionUpIn)

						previousSection?.target.classList.add(...classesSectionDownOut)
						target.addEventListener(
							"animationend",
							() => {
								previousSection?.target.classList.remove(...classesSectionDownOut)
							},
							{ once: true }
						)
					}
				}
			} else {
				// Section is leaving the viewport
				// Remove current animation classes
				target.classList.remove(...classesSectionDownIn)
				target.classList.remove(...classesSectionUpIn)

				// Add exit animation classes
				const direction = checkIntersectionDirection(entry)
				if (direction === "down") {
					target.classList.add(...classesSectionDownOut)
				} else {
					target.classList.add(...classesSectionUpOut)
				}

				// Remove exit classes after animation completes
				target.addEventListener(
					"animationend",
					() => {
						target.classList.remove(...classesSectionDownOut)
						target.classList.remove(...classesSectionUpOut)
					},
					{ once: true }
				)
			}
		})
	})

	const skillsObserver = new IntersectionObserver((entries) => {
		entries.forEach((entry, index) => {
			const target = entry.target as HTMLElement
			if (entry.isIntersecting) {
				target.classList.add(...skillsClasses)
				target.style.animationDelay = `${index * 100}ms`
			} else {
				target.classList.remove(...skillsClasses)
				target.style.animationDelay = ""
			}
		})
	})

	// check intersection direction and return up or down
	function checkIntersectionDirection(entry: IntersectionObserverEntry) {
		if (entry.boundingClientRect.top < (entry.rootBounds?.top ?? 0)) {
			return "up"
		} else {
			return "down"
		}
	}

	if (window.innerWidth > 1024) {
		sectionsObserver.disconnect()
		skillsObserver.disconnect()

		skills.forEach((skill) => {
			skillsObserver.observe(skill)
		})
		sections.forEach((col) => {
			sectionsObserver.observe(col)
		})
	} else {
		sectionsObserver.disconnect()
		skillsObserver.disconnect()
	}

	function handleResize() {
		if (window.innerWidth > 1024) {
			sectionsObserver.disconnect()
			skillsObserver.disconnect()

			skills.forEach((skill) => {
				skillsObserver.observe(skill)
			})
			sections.forEach((col) => {
				sectionsObserver.observe(col)
			})
		} else {
			sectionsObserver.disconnect()
			skillsObserver.disconnect()
		}
	}
	window.addEventListener("resize", handleResize)
</script>
